# Creates a json file with all the unique events available in the input.
# The input is a text file with a json event per line. It can be generated by
# using the API Mate to get all events in redis during a meeting and pasting into
# a file.
# Unique events will be filtered from this file and printed as the output of
# this script.

require 'rubygems'
require 'json'

unique_messages = []
events = []

file = File.open(ARGV[0])
lines = file.read
lines.each_line do |line|
  begin
    json = JSON.parse(line)
  rescue
    json = nil
  end
  if json && json["header"]
    name = json["header"]["name"]
    unless unique_messages.include?(name)
      unique_messages << name
      events << line.strip
    end
  end
end
file.close

# sort alphabetically by event name
events = events.sort { |x,y|
  JSON.parse(x)["header"]["name"] <=> JSON.parse(y)["header"]["name"]
}

# add a header and footer to make it a valid json
output  = '{"events":['
output += events.join(',')
output += ']}'

# output it prettified
puts JSON.pretty_generate(JSON.parse(output))
